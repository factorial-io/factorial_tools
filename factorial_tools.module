<?php

/**
 * @file
 * Helper functions for deployment.
 */

define('FACTORIAL_TOOLS_BATCH_LIMIT', 10);
use \Drupal\Core\Entity\Query\QueryInterface;

/**
 * Delete all entities that can be loaded using given query.
 *
 * @param array $sandbox
 *   The $sandbox variable passed to hook_update_N.
 * @param QueryInterface $query
 *   The query used to find ids of the entities to be deleted.
 * @param QueryInterface $count_query
 *   Optional count query to be used for finding maximum number of entities.
 *
 * @return string
 *   Return value to be used for hook_update_N.
 */
function factorial_tools_entities_delete_by_query(&$sandbox, QueryInterface $query, QueryInterface $count_query = NULL) {
  if (!isset($sandbox['progress'])) {
    $count_query = ($count_query) ? $count_query : clone $query;
    $sandbox['progress'] = 0;
    $sandbox['max'] = $count_query->count()->execute();
    $sandbox['messages'] = array();
  }

  $query->pager(FACTORIAL_TOOLS_BATCH_LIMIT);
  $entity_ids = $query->execute();

  $entity_type = $query->getEntityTypeId();
  $storage_handler = \Drupal::entityManager()->getStorage($entity_type);
  $entities = $storage_handler->loadMultiple($entity_ids);
  $storage_handler->delete($entities);
  $sandbox['progress'] += count($entity_ids);

  $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max'])
    ? TRUE
    : ($sandbox['progress'] / $sandbox['max']);

  if ($sandbox['#finished']) {
    return t('Deleted @count number of entities of type @type and given conditions.', array('@count' => $sandbox['progress'], '@type' => $entity_type));
  }
}

/**
 * Delete all entities of a given entity type.
 *
 * @param array $sandbox
 *   The $sandbox variable passed to hook_update_N.
 * @param string $entity_type
 *   The entity type machine name.
 * @param array $conditions
 *   Various conditions supported by entityQuery.
 *
 * @return string
 *   Return value to be used for hook_update_N.
 */
function factorial_tools_entities_delete(&$sandbox, $entity_type, $conditions = array()) {
  if (!isset($sandbox['progress'])) {
    $query = _factorial_tools_create_entity_query($entity_type, $conditions);
    $sandbox['progress'] = 0;
    $sandbox['max'] = $query->count()->execute();
    $sandbox['messages'] = array();
  }

  $query = _factorial_tools_create_entity_query($entity_type, $conditions);
  $query->pager(FACTORIAL_TOOLS_BATCH_LIMIT);
  $entity_ids = $query->execute();
  $storage_handler = \Drupal::entityManager()->getStorage($entity_type);
  $entities = $storage_handler->loadMultiple($entity_ids);
  $storage_handler->delete($entities);
  $sandbox['progress'] += count($entity_ids);

  $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max'])
    ? TRUE
    : ($sandbox['progress'] / $sandbox['max']);

  if ($sandbox['#finished']) {
    return t('Deleted @count number of entities of type @type and given conditions.', array('@count' => $sandbox['progress'], '@type' => $entity_type));
  }

}

/**
 * Helper function to create entityQuery.
 */
function _factorial_tools_create_entity_query($entity_type, $conditions = array()) {
  $query = \Drupal::entityQuery($entity_type);
  if ($conditions) {
    foreach ($conditions as $condition) {
      @list($field, $arg, $op) = $condition;
      if ($op === NULL) {
        $query->condition($field, $arg);
      }
      else {
        $query->condition($field, $arg, $op);
      }
    }
  }
  return $query;
}

/**
 * Work on entities that can be loaded using given query.
 *
 * @param callable $func
 *   The function to call.
 * @param array $sandbox
 *   The $sandbox variable passed to hook_update_N.
 * @param QueryInterface $query
 *   The query used to find ids of the entities to be deleted.
 * @param QueryInterface $count_query
 *   Optional count query to be used for finding maximum number of entities.
 *
 * @return string
 *   Return value to be used for hook_update_N.
 */
function factorial_tools_entities_apply_func_by_query(callable $func, array &$sandbox, QueryInterface $query, QueryInterface $count_query = NULL) {
  if (!isset($sandbox['progress'])) {
    $count_query = ($count_query) ? $count_query : clone $query;
    $sandbox['progress'] = 0;
    $sandbox['max'] = $count_query->count()->execute();
    $sandbox['messages'] = array();
  }

  $query->pager(FACTORIAL_TOOLS_BATCH_LIMIT);
  $entity_ids = $query->execute();

  $entity_type = $query->getEntityTypeId();
  $storage_handler = \Drupal::entityManager()->getStorage($entity_type);
  $entities = $storage_handler->loadMultiple($entity_ids);
  foreach ($entities as $ndx => $entity) {
    $func($entity);
  }
  $sandbox['progress'] += count($entity_ids);

  $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max'])
    ? TRUE
    : ($sandbox['progress'] / $sandbox['max']);

  print_r($sandbox);

  if ($sandbox['#finished']) {
    return t('Applied func on @count number of entities of type @type and given conditions.', array('@count' => $sandbox['progress'], '@type' => $entity_type));
  }
}
